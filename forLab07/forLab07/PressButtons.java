// package forLab07;import java.awt.*;import java.awt.event.*;import javax.swing.*;  // Laureli M// Datepublic class PressButtons extends JFrame {    // GUI elements    private JTextField messageTF;   // to display messages to user    private JButton firstB, secondB, thirdB, quitB; //buttons to press as directed    private Container myCP;//handy reference to the content pane of the JFrame    // Boolean variables    private boolean expectFirst;   // set to true when firstB should be pressed    private boolean expectSecond;  // set to true when secondB should be pressed    private boolean expectThird;  // set to true when secondB should be pressed    private boolean expectQuit;    // set to true when quitB should be pressed	    public PressButtons() {  	// Create and place window.	super ("Click Buttons in Order");	myCP = getContentPane(); 	myCP.setLayout(new FlowLayout());	setSize(375, 100);	setLocation(100, 100); 	// Create and add textfield with messages to user.	messageTF = new JTextField("Press the First button.", 30); 	messageTF.setBackground(Color.CYAN);	myCP.add(messageTF);	// Create and add First button.	firstB = new JButton("First");	firstB.setForeground(Color.BLUE);	myCP.add(firstB);	firstB.addActionListener(new FirstBHandler());	// Create and add Second button.			secondB = new JButton("Second");	secondB.setForeground(Color.GREEN);	myCP.add(secondB);	secondB.addActionListener(new SecondBHandler());	// Create and add Third button.			thirdB = new JButton("Third");	thirdB.setForeground(Color.CYAN);	myCP.add(thirdB);	thirdB.addActionListener(new ThirdBHandler());	// Create and add Quit button.	quitB = new JButton("Quit");	quitB.setForeground(Color.red);	quitB.addActionListener(new QuitBHandler());	myCP.add(quitB);	// Finish setting up frame.	setVisible(true);	addWindowListener(new WindowAdapter() {		public void windowClosing(WindowEvent e) {		    System.exit(0);		}//windowClosing	    });	// Initialize the flags to indicate that we expect the First button	// to be pressed.	expectFirst = true;	expectSecond = false;	expectThird = false;	expectQuit = false;    } //end of constructor	    public class FirstBHandler implements ActionListener {	public void actionPerformed(ActionEvent e) {	    if(expectFirst) {		messageTF.setText("OK, now press the Second button");		expectFirst = false;		expectSecond = true;	    } else if(expectSecond) {		messageTF.setText("No! You should press the Second button");	    }else if(expectThird) {		messageTF.setText("No, not the third! You should press the Second button");	    } else {		messageTF.setText("No! You should press the Quit button");	    } // last else	}//actionPerformed    }//FirstBHandler    public class SecondBHandler implements ActionListener {	public void actionPerformed(ActionEvent e) {	    if (expectSecond) {		messageTF.setText("OK now press the third button");		expectSecond = false;		expectThird = true;	    } else if (expectFirst) {		messageTF.setText("No! You should press the First button");	    } else if (expectThird) {		messageTF.setText("No! You should press the Third button");	    }else {		messageTF.setText("No! You should press the Quit button");	    }// last else	}//actionPerformed    }//SecondBHandler    public class ThirdBHandler implements ActionListener {	public void actionPerformed(ActionEvent e) {	    if (expectThird) {		messageTF.setText("OK now press the Quit button");		expectThird = false;		expectQuit = true;	    } else if (expectFirst) {		messageTF.setText("No! You should press the First button");	    } else if (expectSecond) {		messageTF.setText("No! You should press the Second button");	    }else {		messageTF.setText("No! You should press the Quit button");	    }// last else	}//actionPerformed    }//SecondBHandler	    public class QuitBHandler implements ActionListener {	public void actionPerformed(ActionEvent e) {	    if (expectQuit) {		firstB.setEnabled(false);		secondB.setEnabled(false);		thirdB.setEnabled(false);		quitB.setEnabled(false);		messageTF.setText("OK, goodbye! Click the red button to close this window!");		expectQuit = false;	    } else if (expectFirst) {		messageTF.setText("No! You should press the First button");	    } else if (expectSecond) {		messageTF.setText("No! You should press the Second button");	    } else if (expectThird) {		messageTF.setText("No! You should press the Third button");	    } else {		messageTF.setText("No! You should press the Second button");	    }// last else	}// actionPerformed    }//QuitBHandler		    public static void main(String args[]) {	// This generates a warning because we construct and name a PressButtons	// object but never use it again.  That's because everything takes place	// in the constructor.  Remove the equals sign and everything to the	// left of it if the warning bothers you.	PressButtons myApp = new PressButtons();    }}//class PressButtons